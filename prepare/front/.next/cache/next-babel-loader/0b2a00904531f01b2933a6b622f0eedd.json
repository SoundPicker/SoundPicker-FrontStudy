{"ast":null,"code":"import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport AppLayout from '../components/AppLayout';\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Home = function Home() {\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector2.mainPosts,\n      hasMorePost = _useSelector2.hasMorePost,\n      loadPostsLoading = _useSelector2.loadPostsLoading,\n      retweetError = _useSelector2.retweetError;\n\n  useEffect(function () {\n    if (retweetError) {\n      return alert(retweetError);\n    }\n  }, [retweetError]);\n  useEffect(function () {\n    function onScroll() {\n      // scrollY: 얼마나 내렸는지\n      // clientHeight: 화면 보이는 길이\n      // scrollHeight: 총 길이\n      // scrollY + clientHeight = scrollHeight\n      // 스크롤 끝까지 다 내렸으면\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        // post를 불러오고 있는 중이라면 request 보내지 못하게\n        if (hasMorePost && !loadPostsLoading) {\n          var _mainPosts;\n\n          var lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id;\n          dispatch({\n            type: LOAD_POSTS_REQUEST,\n            lastId: lastId\n          });\n        }\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return function () {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [hasMorePost, loadPostsLoading]);\n  return /*#__PURE__*/_jsxs(AppLayout, {\n    children: [me && /*#__PURE__*/_jsx(PostForm, {}), mainPosts.map(function (post) {\n      return /*#__PURE__*/_jsx(PostCard, {\n        post: post\n      }, post.id);\n    })]\n  });\n}; // 프론트 서버에서 실행됨\n// Home보다 먼저 실행됨\n// 접속할 때마다 화면이 바뀌어야 하면 getServerSideProps, 대부분 이것을 사용\n\n\nexport var __N_SSP = true;\nexport default Home;","map":null,"metadata":{},"sourceType":"module"}