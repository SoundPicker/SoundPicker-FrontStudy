{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uC2B9\\uBBF8\\\\Desktop\\\\SOPT\\\\SoundPicker-Study\\\\SoundPicker-FrontStudy\\\\prepare\\\\front\\\\pages\\\\post\\\\[id].js\";\n// post/[id].js\nimport React from 'react';\nimport { END } from 'redux-saga';\nimport axios from 'axios';\nimport { useRouter } from 'next/router';\nimport { useSelector } from 'react-redux';\nimport Head from 'next/head';\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\nimport { LOAD_POST_REQUEST } from '../../reducers/post';\nimport wrapper from '../../store/configureStore';\nimport AppLayout from '../../components/AppLayout';\nimport PostCard from '../../components/PostCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = () => {\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const {\n    singlePost\n  } = useSelector(state => state.post);\n\n  if (router.isFallback) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uB85C\\uB529\\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: [singlePost.User.nickname, \"\\uB2D8\\uC758 \\uAE00\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: singlePost.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:title\",\n        content: `${singlePost.User.nickname}님의 게시글`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:description\",\n        content: `${singlePost.content}님의 게시글`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:image\",\n        content: singlePost.Images[0] ? singlePost.Images[0].src : 'https://nodebird.com/favicon.ico'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:url\",\n        content: `https://nodebird.com/post/${id}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostCard, {\n      post: singlePost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}; // html로 미리 만들어둘만한 페이지만 미리 가져오기\n// 다이나믹 라우팅일때는 getStaticPaths + getStaticProps\n\n\nexport async function getStaticPaths() {\n  return {\n    paths: [{\n      params: {\n        id: '1'\n      }\n    }, {\n      params: {\n        id: '2'\n      }\n    }, {\n      params: {\n        id: '3'\n      }\n    }] // fallback을 false로 하면 params에 없으면 에러가 뜸\n    // fallback을 true로 하면 ssr이 안됨\n    // fallback이 true인데 params에 현재 경로가 없으면 서버로부터 가져옴, 그동안은 로딩중...이 뜸\n\n  };\n}\nexport const getStaticProps = wrapper.getStaticProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_POST_REQUEST,\n    data: context.params.id\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default Post;","map":{"version":3,"sources":["C:/Users/김승미/Desktop/SOPT/SoundPicker-Study/SoundPicker-FrontStudy/prepare/front/pages/post/[id].js"],"names":["React","END","axios","useRouter","useSelector","Head","LOAD_MY_INFO_REQUEST","LOAD_POST_REQUEST","wrapper","AppLayout","PostCard","Post","router","id","query","singlePost","state","post","isFallback","User","nickname","content","Images","src","getStaticPaths","paths","params","getStaticProps","context","cookie","req","headers","defaults","Cookie","store","dispatch","type","data","sagaTask","toPromise"],"mappings":"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","sourcesContent":["// post/[id].js\r\nimport React from 'react';\r\nimport { END } from 'redux-saga';\r\nimport axios from 'axios';\r\nimport { useRouter } from 'next/router';\r\nimport { useSelector } from 'react-redux';\r\nimport Head from 'next/head';\r\n\r\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\r\nimport { LOAD_POST_REQUEST } from '../../reducers/post';\r\nimport wrapper from '../../store/configureStore';\r\nimport AppLayout from '../../components/AppLayout';\r\nimport PostCard from '../../components/PostCard';\r\n\r\nconst Post = () => {\r\n  const router = useRouter();\r\n  const { id } = router.query;\r\n  const { singlePost } = useSelector((state) => state.post);\r\n\r\n  if (router.isFallback) {\r\n    return <div>로딩중...</div>;\r\n  }\r\n\r\n  return (\r\n    <AppLayout>\r\n      <Head>\r\n        <title>{singlePost.User.nickname}님의 글</title>\r\n        <meta name=\"description\" content={singlePost.content} />\r\n        <meta\r\n          property=\"og:title\"\r\n          content={`${singlePost.User.nickname}님의 게시글`}\r\n        />\r\n        <meta\r\n          property=\"og:description\"\r\n          content={`${singlePost.content}님의 게시글`}\r\n        />\r\n        <meta\r\n          property=\"og:image\"\r\n          content={\r\n            singlePost.Images[0]\r\n              ? singlePost.Images[0].src\r\n              : 'https://nodebird.com/favicon.ico'\r\n          }\r\n        />\r\n        <meta property=\"og:url\" content={`https://nodebird.com/post/${id}`} />\r\n      </Head>\r\n      <PostCard post={singlePost} />\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\n// html로 미리 만들어둘만한 페이지만 미리 가져오기\r\n// 다이나믹 라우팅일때는 getStaticPaths + getStaticProps\r\nexport async function getStaticPaths() {\r\n  return {\r\n    paths: [\r\n      { params: { id: '1' } },\r\n      { params: { id: '2' } },\r\n      { params: { id: '3' } },\r\n    ],\r\n    // fallback을 false로 하면 params에 없으면 에러가 뜸\r\n    // fallback을 true로 하면 ssr이 안됨\r\n    // fallback이 true인데 params에 현재 경로가 없으면 서버로부터 가져옴, 그동안은 로딩중...이 뜸\r\n  };\r\n}\r\n\r\nexport const getStaticProps = wrapper.getStaticProps(async (context) => {\r\n  const cookie = context.req ? context.req.headers.cookie : '';\r\n  axios.defaults.headers.Cookie = '';\r\n  if (context.req && cookie) {\r\n    axios.defaults.headers.Cookie = cookie;\r\n  }\r\n  context.store.dispatch({\r\n    type: LOAD_MY_INFO_REQUEST,\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_POST_REQUEST,\r\n    data: context.params.id,\r\n  });\r\n  context.store.dispatch(END);\r\n  await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}