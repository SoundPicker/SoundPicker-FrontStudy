{"ast":null,"code":"import { createWrapper } from 'next-redux-wrapper';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport reducer from '../reducers/index';\nimport rootSaga from '../sagas'; // action이 dispatch되는 것을 logging하는 미들웨어\n\nconst loggerMiddleware = ({\n  dispatch,\n  getState\n}) => next => action => {\n  // action을 실행하기 전에 콘솔 한 번 찍어주는 미들웨어\n  console.log(action);\n  return next(action);\n};\n\nconst configureStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware, loggerMiddleware]; // redux의 기능이 확장된 것이라 enhancer\n\n  const enhancer = true ? // 배포용\n  compose(applyMiddleware(...middlewares)) : // 개발용일 때는 devtools 연결\n  // middlewares는 배열이니까 spread해서 넣고!\n  composeWithDevTools(applyMiddleware(...middlewares));\n  const store = createStore(reducer, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  // 개발모드라면 디버그를 좀 더 자세하게 해 줌\n  debug: false\n});\nexport default wrapper;","map":null,"metadata":{},"sourceType":"module"}