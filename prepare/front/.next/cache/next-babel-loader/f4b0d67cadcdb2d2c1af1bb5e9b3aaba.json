{"ast":null,"code":"import { all, fork, call, put, takeLatest, delay } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE, LOAD_MY_INFO_SUCCESS, LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_FAILURE, CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, CHANGE_NICKNAME_FAILURE, LOAD_FOLLOWINGS_REQUEST, LOAD_FOLLOWERS_REQUEST } from '../reducers/user';\n\nfunction loginAPI(data) {\n  return axios.post('/user/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    //call은 동기라 return할때까지 기다렸다 넣어줌, fork는 비동기라 결과 오기 전에 바로 다음 거 실행\n    const result = yield call(loginAPI, action.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      //put은 dispatch 개념\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logoutAPI() {\n  return axios.post('/user/logout');\n}\n\nfunction* logOut() {\n  try {\n    yield call(logoutAPI); //call은 동기라 return할때까지 기다렸다 넣어줌, fork는 비동기라 결과 오기 전에 바로 다음 거 실행\n\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      //put은 dispatch 개념\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signUpAPI(data) {\n  return axios.post('/user', data);\n}\n\nfunction* signUp(action) {\n  try {\n    const result = yield call(signUpAPI, action.data);\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadMyInfoAPI() {\n  return axios.get('/user');\n}\n\nfunction* loadMyInfo() {\n  try {\n    const result = yield call(loadMyInfoAPI);\n    yield put({\n      type: LOAD_MY_INFO_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_MY_INFO_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unfollowAPI(data) {\n  return axios.delete(`/user/${data}/follow`);\n}\n\nfunction* unfollow(action) {\n  try {\n    const result = yield call(unfollowAPI, action.data);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction followAPI(data) {\n  return axios.patch(`/user/${data}/follow`);\n}\n\nfunction* follow(action) {\n  try {\n    const result = yield call(followAPI, action.data);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction changeNicknameAPI(data) {\n  return axios.patch('/user/nickname', {\n    nickname: data\n  });\n}\n\nfunction* changeNickname(action) {\n  try {\n    const result = yield call(changeNicknameAPI, action.data);\n    yield put({\n      type: CHANGE_NICKNAME_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: CHANGE_NICKNAME_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn); //LOG_IN이라는 action이 실행될때까지 기다리겠다\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nfunction* watchLoadMyInfo() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchLoadFollowings() {\n  yield takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollwings);\n}\n\nfunction* watchLoadFollowers() {\n  yield takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollwers);\n}\n\nfunction* watchChangeNickname() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut), fork(watchSignUp), fork(watchLoadMyInfo), fork(watchFollow), fork(watchUnfollow), fork(watchLoadFollowings), fork(watchLoadFollowers), fork(watchChangeNickname)]);\n}","map":{"version":3,"sources":["C:/Users/김승미/Desktop/SOPT/SoundPicker-Study/SoundPicker-FrontStudy/prepare/front/sagas/user.js"],"names":["all","fork","call","put","takeLatest","delay","axios","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","LOAD_MY_INFO_SUCCESS","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","LOAD_FOLLOWINGS_REQUEST","LOAD_FOLLOWERS_REQUEST","loginAPI","data","post","logIn","action","result","type","err","error","response","logoutAPI","logOut","signUpAPI","signUp","console","log","loadMyInfoAPI","get","loadMyInfo","unfollowAPI","delete","unfollow","followAPI","patch","follow","changeNicknameAPI","nickname","changeNickname","watchLogIn","watchLogOut","watchSignUp","watchLoadMyInfo","watchFollow","watchUnfollow","watchLoadFollowings","loadFollwings","watchLoadFollowers","loadFollwers","watchChangeNickname","userSaga"],"mappings":"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","sourcesContent":["import { all, fork, call, put, takeLatest, delay } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\n\r\nimport {\r\n  LOG_IN_REQUEST,\r\n  LOG_IN_SUCCESS,\r\n  LOG_IN_FAILURE,\r\n  LOG_OUT_REQUEST,\r\n  LOG_OUT_SUCCESS,\r\n  LOG_OUT_FAILURE,\r\n  SIGN_UP_REQUEST,\r\n  SIGN_UP_SUCCESS,\r\n  SIGN_UP_FAILURE,\r\n  FOLLOW_REQUEST,\r\n  FOLLOW_SUCCESS,\r\n  FOLLOW_FAILURE,\r\n  UNFOLLOW_REQUEST,\r\n  UNFOLLOW_SUCCESS,\r\n  UNFOLLOW_FAILURE,\r\n  LOAD_MY_INFO_SUCCESS,\r\n  LOAD_MY_INFO_REQUEST,\r\n  LOAD_MY_INFO_FAILURE,\r\n  CHANGE_NICKNAME_REQUEST,\r\n  CHANGE_NICKNAME_SUCCESS,\r\n  CHANGE_NICKNAME_FAILURE,\r\n  LOAD_FOLLOWINGS_REQUEST,\r\n  LOAD_FOLLOWERS_REQUEST,\r\n} from '../reducers/user';\r\n\r\nfunction loginAPI(data) {\r\n  return axios.post('/user/login', data);\r\n}\r\n\r\nfunction* logIn(action) {\r\n  try {\r\n    //call은 동기라 return할때까지 기다렸다 넣어줌, fork는 비동기라 결과 오기 전에 바로 다음 거 실행\r\n    const result = yield call(loginAPI, action.data);\r\n    yield put({\r\n      type: LOG_IN_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      //put은 dispatch 개념\r\n      type: LOG_IN_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction logoutAPI() {\r\n  return axios.post('/user/logout');\r\n}\r\n\r\nfunction* logOut() {\r\n  try {\r\n    yield call(logoutAPI); //call은 동기라 return할때까지 기다렸다 넣어줌, fork는 비동기라 결과 오기 전에 바로 다음 거 실행\r\n    yield put({\r\n      type: LOG_OUT_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      //put은 dispatch 개념\r\n      type: LOG_OUT_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction signUpAPI(data) {\r\n  return axios.post('/user', data);\r\n}\r\n\r\nfunction* signUp(action) {\r\n  try {\r\n    const result = yield call(signUpAPI, action.data);\r\n    console.log(result);\r\n    yield put({\r\n      type: SIGN_UP_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: SIGN_UP_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction loadMyInfoAPI() {\r\n  return axios.get('/user');\r\n}\r\n\r\nfunction* loadMyInfo() {\r\n  try {\r\n    const result = yield call(loadMyInfoAPI);\r\n    yield put({\r\n      type: LOAD_MY_INFO_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOAD_MY_INFO_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction unfollowAPI(data) {\r\n  return axios.delete(`/user/${data}/follow`);\r\n}\r\n\r\nfunction* unfollow(action) {\r\n  try {\r\n    const result = yield call(unfollowAPI, action.data);\r\n    yield put({\r\n      type: UNFOLLOW_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: UNFOLLOW_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction followAPI(data) {\r\n  return axios.patch(`/user/${data}/follow`);\r\n}\r\n\r\nfunction* follow(action) {\r\n  try {\r\n    const result = yield call(followAPI, action.data);\r\n    yield put({\r\n      type: FOLLOW_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: FOLLOW_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction changeNicknameAPI(data) {\r\n  return axios.patch('/user/nickname', { nickname: data });\r\n}\r\n\r\nfunction* changeNickname(action) {\r\n  try {\r\n    const result = yield call(changeNicknameAPI, action.data);\r\n    yield put({\r\n      type: CHANGE_NICKNAME_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: CHANGE_NICKNAME_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLogIn() {\r\n  yield takeLatest(LOG_IN_REQUEST, logIn); //LOG_IN이라는 action이 실행될때까지 기다리겠다\r\n}\r\n\r\nfunction* watchLogOut() {\r\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n}\r\n\r\nfunction* watchSignUp() {\r\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\nfunction* watchLoadMyInfo() {\r\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\r\n}\r\n\r\nfunction* watchFollow() {\r\n  yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\n\r\nfunction* watchUnfollow() {\r\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\r\n}\r\n\r\nfunction* watchLoadFollowings() {\r\n  yield takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollwings);\r\n}\r\n\r\nfunction* watchLoadFollowers() {\r\n  yield takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollwers);\r\n}\r\n\r\nfunction* watchChangeNickname() {\r\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([\r\n    fork(watchLogIn),\r\n    fork(watchLogOut),\r\n    fork(watchSignUp),\r\n    fork(watchLoadMyInfo),\r\n    fork(watchFollow),\r\n    fork(watchUnfollow),\r\n    fork(watchLoadFollowings),\r\n    fork(watchLoadFollowers),\r\n    fork(watchChangeNickname),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}