{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uC2B9\\uBBF8\\\\Desktop\\\\SOPT\\\\SoundPicker-Study\\\\SoundPicker-FrontStudy\\\\prepare\\\\front\\\\pages\\\\post\\\\[id].js\";\n// post/[id].js\nimport { END } from 'redux-saga';\nimport axios from 'axios';\nimport { useRouter } from 'next/router';\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\nimport wrapper from '../../store/configureStore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = () => {\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [id, \"\\uBC88 \\uAC8C\\uC2DC\\uAE00\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 10\n  }, this);\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default Post;","map":{"version":3,"sources":["C:/Users/김승미/Desktop/SOPT/SoundPicker-Study/SoundPicker-FrontStudy/prepare/front/pages/post/[id].js"],"names":["END","axios","useRouter","LOAD_MY_INFO_REQUEST","wrapper","Post","router","id","query","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","dispatch","type","sagaTask","toPromise"],"mappings":";AAAA;AAEA,SAASA,GAAT,QAAoB,YAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,oBAAT,QAAqC,qBAArC;AACA,OAAOC,OAAP,MAAoB,4BAApB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,MAAM,GAAGJ,SAAS,EAAxB;AACA,QAAM;AAAEK,IAAAA;AAAF,MAASD,MAAM,CAACE,KAAtB;AAEA,sBAAO;AAAA,eAAMD,EAAN;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CALD;;AAOA,OAAO,MAAME,kBAAkB,GAAGL,OAAO,CAACK,kBAAR,CAChC,MAAOC,OAAP,IAAmB;AACjB,QAAMC,MAAM,GAAGD,OAAO,CAACE,GAAR,GAAcF,OAAO,CAACE,GAAR,CAAYC,OAAZ,CAAoBF,MAAlC,GAA2C,EAA1D;AACAV,EAAAA,KAAK,CAACa,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgC,EAAhC;;AACA,MAAIL,OAAO,CAACE,GAAR,IAAeD,MAAnB,EAA2B;AACzBV,IAAAA,KAAK,CAACa,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgCJ,MAAhC;AACD;;AACDD,EAAAA,OAAO,CAACM,KAAR,CAAcC,QAAd,CAAuB;AACrBC,IAAAA,IAAI,EAAEf;AADe,GAAvB;AAGAO,EAAAA,OAAO,CAACM,KAAR,CAAcC,QAAd,CAAuBjB,GAAvB;AACA,QAAMU,OAAO,CAACM,KAAR,CAAcG,QAAd,CAAuBC,SAAvB,EAAN;AACD,CAZ+B,CAA3B;AAeP,eAAef,IAAf","sourcesContent":["// post/[id].js\r\n\r\nimport { END } from 'redux-saga';\r\nimport axios from 'axios';\r\nimport { useRouter } from 'next/router';\r\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\r\nimport wrapper from '../../store/configureStore';\r\n\r\nconst Post = () => {\r\n  const router = useRouter();\r\n  const { id } = router.query;\r\n\r\n  return <div>{id}번 게시글</div>;\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(\r\n  async (context) => {\r\n    const cookie = context.req ? context.req.headers.cookie : '';\r\n    axios.defaults.headers.Cookie = '';\r\n    if (context.req && cookie) {\r\n      axios.defaults.headers.Cookie = cookie;\r\n    }\r\n    context.store.dispatch({\r\n      type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n    context.store.dispatch(END);\r\n    await context.store.sagaTask.toPromise();\r\n  }\r\n);\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}